name: E2E Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  ci-e2e:
    runs-on: ubuntu-latest

    services:
      # Backend service for API endpoints
      backend:
        image: python:3.11
        ports:
          - 8000:8000
        options: >-
          --health-cmd "curl -f http://localhost:8000/ || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: backend/pyproject.toml

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Start backend server
        working-directory: ./backend
        run: |
          # Set test environment variables
          export ENV=test
          export OPENF1_BASE_URL=http://localhost:9999
          export LOG_LEVEL=WARNING

          # Start FastAPI server in background
          python -m uvicorn app:app --host 0.0.0.0 --port 8000 &
          echo $! > backend.pid

          # Wait for backend to be ready
          timeout=60
          while ! curl -f http://localhost:8000/ > /dev/null 2>&1; do
            echo "Waiting for backend to start..."
            sleep 2
            timeout=$((timeout - 2))
            if [ $timeout -le 0 ]; then
              echo "Backend failed to start within 60 seconds"
              exit 1
            fi
          done
          echo "Backend is ready!"

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install chromium

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run Playwright tests
        working-directory: ./frontend
        run: npx playwright test
        env:
          # Ensure tests run against local backend
          NEXT_PUBLIC_API_URL: http://localhost:8000

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: frontend/test-results/
          retention-days: 7

      - name: Stop backend server
        if: always()
        working-directory: ./backend
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
            rm backend.pid
          fi

      - name: Comment PR with test results
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Try to read test results summary
            let comment = '## 🎭 E2E Test Results\n\n';
            comment += '❌ Some E2E tests failed. Please check the detailed report in the artifacts.\n\n';
            comment += '### Artifacts\n';
            comment += '- 📊 [Playwright HTML Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n';
            comment += '- 📋 [Test Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n';
            comment += '### Next Steps\n';
            comment += '1. Download and review the HTML report artifact\n';
            comment += '2. Check screenshots and videos for failed tests\n';
            comment += '3. Fix any issues and push updates to re-run tests\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  accessibility-audit:
    runs-on: ubuntu-latest
    needs: ci-e2e
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build application
        working-directory: ./frontend
        run: npm run build

      - name: Start application
        working-directory: ./frontend
        run: |
          npm start &
          echo $! > app.pid

          # Wait for app to be ready
          timeout=60
          while ! curl -f http://localhost:3000 > /dev/null 2>&1; do
            echo "Waiting for app to start..."
            sleep 2
            timeout=$((timeout - 2))
            if [ $timeout -le 0 ]; then
              echo "App failed to start"
              exit 1
            fi
          done

      - name: Install axe-cli
        run: npm install -g @axe-core/cli

      - name: Run accessibility audit
        run: |
          axe http://localhost:3000 \
            --rules-to-run "color-contrast,focus-order-semantics,keyboard,landmark-one-main,page-has-heading-one" \
            --reporter json \
            --output-file accessibility-report.json

      - name: Stop application
        if: always()
        working-directory: ./frontend
        run: |
          if [ -f app.pid ]; then
            kill $(cat app.pid) || true
            rm app.pid
          fi

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: accessibility-report.json
          retention-days: 7
