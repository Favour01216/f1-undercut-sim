version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - OFFLINE=0
      - CORS_ORIGINS=https://yourapp.com,http://localhost:3000
      - SENTRY_ENVIRONMENT=production
      - SENTRY_DSN=${SENTRY_DSN}
      - RNG_SEED=42
      - WORKERS=4
    volumes:
      # Persistent storage for production
      - f1-cache:/app/features
      - f1-logs:/app/logs
    networks:
      - f1-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_ENABLE_SENTRY=true
      - NEXT_PUBLIC_SENTRY_ENVIRONMENT=production
      - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - f1-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M

networks:
  f1-network:
    driver: bridge

volumes:
  f1-cache:
    driver: local
  f1-logs:
    driver: local
